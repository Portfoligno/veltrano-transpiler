// Demonstrates import statements and UFCS transformation
// Note: This example shows syntax only - won't compile as a standalone Rust program

// Import with alias
import Vec.new as createVec
import Option.isSome
import Result.ok

// User imports can override built-in methods
// For example: import MyCustomTrait.clone would override the built-in Clone::clone

fun main() {
    // Pre-imported methods work by default
    val text = "Hello"
    val owned = text.toString()  // Generates: ToString::to_string(text)
    
    // Method calls without imports stay as regular method calls
    val result = processData(42)  // Generates: process_data(42)
    
    // With imports, method calls transform to UFCS:
    // If we called: result.ok()
    // It would generate: Result::ok(result)
    
    // Aliased imports work too:
    // If we called: createVec()  
    // It would generate: Vec::new()
    
    println("Result: {}", result)
}

fun processData(n: I64): I64 {
    return n + 1
}
